version: '3.3'

services:
  #############################################################################
  ## IMAGE FOR THE DATABASE
  #############################################################################
  panghostlin-postgre:
    container_name: panghostlin-postgre
    image: postgres
    restart: always
    logging:
      driver: none
    environment:
      POSTGRES_USER: ${POSTGRE_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRE_PWD}
      POSTGRES_DB: ${POSTGRE_DB}
    ports:
      - "54320:5432"
    volumes:
      - ./.data/postgresql:/var/lib/postgresql/data

  #############################################################################
  ## IMAGE FOR THE MEMBER MANAGEMENT GRPC MICROSERVICE
  #############################################################################
  panghostlin-members:
    container_name: panghostlin-members
    build: ./src/Members
    restart: always
    depends_on:
        - panghostlin-postgre
        - panghostlin-keys
    ports:
        - "8010:8010"
    env_file: .env
    command: ["./wait-for-it.sh panghostlin-postgre:5432 --strict --timeout=2 && ./panghostlin-members"]

  #############################################################################
  ## IMAGE FOR THE PICTURES MANAGEMENT GRPC MICROSERVICE
  #############################################################################
  panghostlin-pictures:
    container_name: panghostlin-pictures
    build: ./src/Pictures
    restart: always
    env_file: .env
    volumes:
        - ./.pictures:/pictures
    depends_on:
        - panghostlin-postgre
        - panghostlin-keys
    ports:
        - "8012:8012"
    command: ["./wait-for-it.sh panghostlin-postgre:5432 --strict --timeout=2 && ./panghostlin-pictures"]
  
  #############################################################################
  ## IMAGE FOR THE KEYS MANAGEMENT GRPC MICROSERVICE
  #############################################################################
  panghostlin-keys:
    container_name: panghostlin-keys
    build: ./src/Keys
    restart: always
    env_file: .env
    depends_on:
      - panghostlin-postgre
    ports:
      - "8011:8011"
    command: ["./wait-for-it.sh panghostlin-postgre:5432 --strict --timeout=2 && ./panghostlin-keys"]

  #############################################################################
  ## IMAGE FOR THE PROXY
  #############################################################################
  panghostlin-proxy:
    container_name: panghostlin-proxy
    build: ./src/Proxy
    restart: always
    env_file: .env
    ports:
      - "8000:8000"
    depends_on:
      - panghostlin-members
      - panghostlin-pictures
      - panghostlin-keys
    command: ["./wait-for-it.sh panghostlin-postgre:5432 --strict --timeout=2 && ./panghostlin-proxy"]

  #############################################################################
  ## IMAGE FOR THE WEBAPP
  #############################################################################
  panghostlin-webapp:
    container_name: panghostlin-webapp
    build: ./src/Webapp
    restart: always
    environment:
      BACKEND: ${DOMAIN}
    depends_on:
      - panghostlin-proxy
    volumes:
      - ./src/Webapp:/home/app
      - /home/app/.next
      - /home/app/node_modules
    ports:
      - 3000:3000
      - 49153:49153
    
  #############################################################################
  ## IMAGE THE NGINX & CERTBOT FOR REVERSE PROXY
  #############################################################################
  panghostlin-nginx: 
    image: nginx:latest
    container_name: panghostlin-nginx
    logging:
      driver: none
    volumes:
      - ./.data/nginx:/etc/nginx/conf.d
      - ./panghostlin-nginx.template:/etc/nginx/panghostlin-nginx.template
      - ./.data/certbot/conf:/etc/letsencrypt
      - ./.data/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    depends_on:
      - panghostlin-webapp
      - panghostlin-proxy
    command: /bin/sh -c "envsubst '$$DOMAIN' < /etc/nginx/panghostlin-nginx.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;' && while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g 'daemon off;'"
    environment:
      DOMAIN: ${DOMAIN}

  panghostlin-certbot:
    image: certbot/certbot
    logging:
      driver: none
    volumes:
      - ./.data/certbot/conf:/etc/letsencrypt
      - ./.data/certbot/www:/var/www/certbot
    depends_on:
      - panghostlin-nginx
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
