#############################################################################
## NGINX CONFIGURATION FOR THE WEBAPP
#############################################################################
upstream webapp {
    server panghostlin-webapp:3000;
    keepalive 4;
}
server {
    listen 80;
    listen [::]:80;

    server_name ${DOMAIN};

    if ($host = ${DOMAIN}) {
        return 301 https://$host$request_uri;
    }
    return 404;
}
server {
    listen [::]:443 ssl ipv6only=on;
    listen 443 ssl;

    server_name ${DOMAIN};

    ssl_certificate /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        proxy_pass http://webapp;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
    }
    location /.well-known/acme-challenge/ {
       root /var/www/certbot;
    }
}

#############################################################################
## NGINX CONFIGURATION FOR THE PROXY
#############################################################################
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}
upstream proxy {
    server panghostlin-proxy:8000;
    keepalive 4;
}
upstream proxyws {
    server panghostlin-proxy:8001;
}
server {
    listen 80;
    listen [::]:80;

    server_name api.${DOMAIN};

    if ($host = api.${DOMAIN}) {
        return 301 https://$host$request_uri;
    }
    return 404;
}
server {
    listen [::]:443 ssl;
    listen 443 ssl;

    server_name api.${DOMAIN};

    ssl_certificate /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location /ws/ {
            add_header 'Access-Control-Allow-Origin' "$http_origin";
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, OPTIONS, DELETE';
            add_header 'Access-Control-Allow-Headers' 'Referer,Origin,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization, Access-Control-Allow-Credentials, X-Content-Type, X-Content-Length, X-Content-Name, X-Content-Parts, X-Content-Last-Modified, X-Content-UUID, X-Content-AlbumID, X-Chunk-ID';
            add_header 'Access-Control-Allow-Credentials' true;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';

            proxy_pass http://proxy;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header X-NginX-Proxy true;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_intercept_errors on;
            proxy_redirect off;
            proxy_cache_bypass $http_upgrade;
            proxy_ssl_session_reuse off;
    }

    location / {
        set $cors false;
		if ($http_origin ~* (^https?://([^/]+\.)*(${DOMAIN})$)) {
			set $cors true;
		}

		if ($request_method = 'OPTIONS') {
			add_header 'Access-Control-Allow-Origin' "$http_origin";
			add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, OPTIONS, DELETE';
            add_header 'Access-Control-Allow-Headers' 'Referer,Origin,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization, Access-Control-Allow-Credentials, X-Content-Type, X-Content-Length, X-Content-Name, X-Content-Parts, X-Content-Last-Modified, X-Content-UUID, X-Content-AlbumID, X-Chunk-ID';
			add_header 'Access-Control-Allow-Credentials' true;

			add_header 'Access-Control-Max-Age' 1728000;
			add_header 'Content-Type' 'text/plain; charset=utf-8';
			add_header 'Content-Length' 0;
			return 204;
		}

        add_header 'Access-Control-Allow-Origin' "$http_origin";
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, OPTIONS, DELETE';
        add_header 'Access-Control-Allow-Headers' 'Referer,Origin,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization, Access-Control-Allow-Credentials, X-Content-Type, X-Content-Length, X-Content-Name, X-Content-Parts, X-Content-Last-Modified, X-Content-UUID, X-Content-AlbumID, X-Chunk-ID';
        add_header 'Access-Control-Allow-Credentials' true;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';

        proxy_pass http://proxy;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
    }

    location /.well-known/acme-challenge/ {
       root /var/www/certbot;
    }
}
